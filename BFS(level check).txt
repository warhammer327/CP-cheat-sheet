    #include<bits/stdc++.h>
     
    using namespace std;
    vector<int>edge[100005];
     
    int level[1000005];
    bool vis[100005];
     
    void BFS(int s)
    {
        queue<int>Q;
        Q.push(s);
        level[s]=1;
        vis[s]=true;
        while(!Q.empty())
        {
            int p = Q.front();
            Q.pop();
            int len = edge[p].size();
            for(int i=0;i<len;i++)
            {
                if(vis[edge[p][i]]==false)
                {
                    vis[edge[p][i]]=true;
                    level[edge[p][i]] = level[p]+1;
                    Q.push(edge[p][i]);
                }
            }
     
        }
    }
     
     
    int main()
    {
        int node;
        cin>>node;
        int connection=node-1;
        for(int i=0;i<connection;i++)
        {
            int x,y;
            cin>>x>>y;
            edge[x].push_back(y);
            edge[y].push_back(x);
        }
        BFS(1);
        int k;
     
        while(cin>>k);
        {
            int kount=0;
            for(int i=1;i<=node;i++)
            {
                if(level[i]==k)
                {
                    kount++;
                }
            }
        cout<<kount<<endl;
        }
     
     
        return 0;
     
     
    }
